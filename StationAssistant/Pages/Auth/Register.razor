@page "/register"

@using Syncfusion.Blazor.DropDowns
@inject NavigationManager navigationManager
@inject IAccountsRepository accountsRepository
@inject ILoginService loginService
@attribute [AuthorizeRoles(Role.Admin)]


<EditForm class="form-signin" OnValidSubmit="CreateUser" Model="userInfo">
    <DataAnnotationsValidator />
    <h4 class="font-weight-normal text-center mb-3">Регистрация нового пользователя</h4>

    <label for="inputName" class="sr-only">Имя пользователя</label>
    <InputText id="inputName" class="form-control" placeholder="Name" @bind-Value="@userInfo.Name" />
    <ValidationMessage For="@(() => userInfo.Login)" />

    <label for="inputLogin" class="sr-only">Логин</label>
    <InputText id="inputLogin" class="form-control" placeholder="Login" autofocus @bind-Value="@userInfo.Login" />
    <ValidationMessage For="@(() => userInfo.Login)" />

    <label for="inputPassword" class="sr-only">Пароль</label>
    <InputText id="inputPassword" class="form-control" placeholder="Password" @bind-Value="@userInfo.Password" />
    <ValidationMessage For="@(() => userInfo.Password)" />

    <SfDropDownList TItem="Roles" TValue="int" PopupHeight="500px" Placeholder="Выберите роль" @bind-Value="DropVal" DataSource="@RolesList">
        <DropDownListFieldSettings Text="Name" Value="ID"></DropDownListFieldSettings>
    </SfDropDownList>
    
    <button class="btn btn-lg btn-primary btn-block mt-2" type="submit">Зарегистрировать</button>
    <label class="text-danger">@error</label>
</EditForm>

@code{

    private User userInfo = new User();
    public int DropVal = 1;

    string error { get; set; }

    public class Roles
    {
        public int ID { get; set; }
        public string Name { get; set; }
    }

    private List<Roles> RolesList = new List<Roles>() {
        new Roles(){ ID= 1, Name= "Администратор" },
        new Roles(){ ID= 2, Name= "Дежурный по станции" },
        new Roles(){ ID= 3, Name= "Маневровый диспетчер" }
     };

    private async Task CreateUser()
    {
        error = null;
        try
        {
            userInfo.Role = RolesList.Find(r => r.ID == DropVal).Name;
            var userToken = await accountsRepository.Regiser(userInfo);
            await loginService.Login(userToken.Token);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}