@page "/"
@inject NotificationService NotificationService
@inject StationAssistant.Data.IStationDataService StationDataService
@attribute [Authorize]

<AuthorizeView>
    <Authorized>
        <h3>Оператор: @context.User.Claims.Where(cl => cl.Type == System.Security.Claims.ClaimTypes.Role).FirstOrDefault()?.Value.ToLower() @context.User.Identity.Name</h3>
    </Authorized>
    <NotAuthorized>
        <h3>Авторизируйтесь для работы с приложением</h3>
    </NotAuthorized>
</AuthorizeView>

<div class="row">
    <div class="col-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Прибытие поездов</h5>
                <p class="card-text">Поездов прибыло:@(arrivedTrains == null? 0: arrivedTrains.Count())</p>
                <p class="card-text">Вагонов прибыло:@(arrivedTrains == null? 0: arrivedTrains.Sum(t => t.Length))</p>
                <p class="card-text">Общий вес:@(arrivedTrains == null? 0: arrivedTrains.Sum(t=>t.WeightBrutto)/10) тонн</p>
                <NavLink class="btn btn-primary" href="arrival">
                    Перейти к прибытию
                </NavLink>
            </div>
        </div>
    </div>
    <div class="col-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Отправление поездов</h5>
                <p class="card-text">Поездов сформировано:@(departingTrains == null? 0: departingTrains.Count())</p>
                <p class="card-text">Вагонов сформировано:@(departingTrains == null? 0: departingTrains.Sum(t => t.Length))</p>
                <p class="card-text">Общий вес:@(departingTrains == null? 0: departingTrains.Sum(t=>t.WeightBrutto)/10) тонн</p>
                <NavLink class="btn btn-primary" href="departure">
                    Перейти к отправлению
                </NavLink>
            </div>
        </div>
    </div>
@*    <div class="col-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Вагоны</h5>
                @if(areas != null)
                {
                    @foreach(string area in areas)
                    {
                        var vagons = StationDataService.GetVagonsOnArea(area).Result;
                    <p class="card-text">@area.Trim(): @(vagons == null? 0: vagons.Length) вагонов весом @(vagons == null ? 0 : vagons.Sum(v => v.WeightNetto)) тонн</p>
                    }
                }
                <NavLink class="nav-link" href="path">
                    Перейти к путям
                </NavLink> 
            </div>
        </div>
    </div>*@
</div>


@code {   

    List<TrainModel> arrivedTrains;
    List<TrainModel> departingTrains;
    //string[] areas;

    protected override async Task OnInitializedAsync()
    {
        var trains = await StationDataService.GetAllTrainsAsync();
        arrivedTrains = trains.Where(t => t.Index.Substring(9, 4) == "1613").ToList();
        departingTrains = trains.Where(t => t.Index.Substring(0, 4) == "1613").ToList();
        //areas = await StationDataService.GetAreasAsync();
    }
}