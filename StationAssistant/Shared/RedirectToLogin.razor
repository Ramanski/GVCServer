@inject NavigationManager navigationManager
@inject IAuthenticationService AuthenticationService

<div class="loader loader-bouncing"><span>Redirecting...</span></div>
@code{

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateTask;

        if (!authenticationState.User.Identity.IsAuthenticated)
        {
            var returnUrl = navigationManager.ToBaseRelativePath(navigationManager.Uri);

            if (string.IsNullOrWhiteSpace(returnUrl))
                navigationManager.NavigateTo("/login", true);
            else
                navigationManager.NavigateTo($"/login?returnUrl={returnUrl}", true);
        }
    }
}
