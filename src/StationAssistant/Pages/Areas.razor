@page "/paths"
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@inject StationAssistant.Services.IStationDataService StationData
@attribute [Authorize]

@if (!dataIsLoaded)
{
    <p>Loading...</p>
}
else
{
<div class="container my-1">
    <table>
        <tr>
            <td>Только сортировочные пути</td>
            <td><SfSwitch @bind-Checked="@onlySort" TChecked="bool" EnablePersistence="true"/></td>
        </tr>
        <tr>
            <td>Только занятые пути</td>
            <td><SfSwitch @bind-Checked="@onlyOccupied" TChecked="bool" EnablePersistence="true"/></td>
        </tr>
    </table>
</div>
    <SfTab @ref="Tab">
        <TabItems>
            @foreach (string area in areas)
            {
                <TabItem Content="@area">
                    <ChildContent>
                        <TabHeader Text="@area"></TabHeader>
                    </ChildContent>
                    <ContentTemplate>
                        <Paths Area="@area" @key="@area" onlySort="onlySort" onlyOccupied="onlyOccupied"></Paths>
                    </ContentTemplate>
                </TabItem>
            }
        </TabItems>
    </SfTab>
}

<style>
    .e-tab .e-tab-header .e-toolbar-item.e-active .e-tab-wrap {
    background: #57d2c1;
    }

    .e-tab .e-tab-header .e-toolbar-item .e-tab-wrap {
    border-radius: 1px;
    border: groove;
    color: rgb(255 255 255);
}

.e-tab .e-tab-header .e-toolbar-item.e-active.e-ileft .e-tab-text, .e-tab .e-tab-header .e-toolbar-item.e-active.e-iright .e-tab-text {
    color: #ff0000;
    font-weight: 600;
}
</style>


@code {
    SfTab Tab;
    public bool onlySort { get; set; } = false;
    public bool onlyOccupied { get; set; } = false;
    private string[] areas { get; set; }
    private string currentArea { get; set; }
    bool dataIsLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        areas = await StationData.GetAreasAsync();
        currentArea = areas[0];
        dataIsLoaded = true;
    }
}
