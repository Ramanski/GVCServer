@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Data
@inject StationAssistant.Services.IStationDataService StationData

<div class="row">
    <div class="col-6 m-1">
        @if(availablePaths?.Any() ?? false)
        {
            <select id="pathsList" @bind="PathId" >
                @foreach (string area in areas)
                {
                    <optgroup label="@area"></optgroup>
                    @foreach(PathData pathData in availablePaths.Where(p => p.Area == area))
                    {
                        <option value="@pathData.Id">@pathData.PathNum</option>
                    }
                }
            </select>
        }
    </div>
</div>

@code {
    [Parameter] public TrainModel selectedTrain { get; set; }
    [Parameter] public bool ShowArrivingPathsOnly { get; set; } = false;
    [Parameter] public bool isDeparting { get; set; } = false;
    public List<PathData> availablePaths { get; set; }
    public List<PathData> pathsInArea { get; set; }
    public List<string> areas;
    public int PathId { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        availablePaths = (await StationData.GetAvailablePaths(selectedTrain, ShowArrivingPathsOnly, isDeparting))
                                          .Select(p => new PathData() { Id = p.Id, Area = p.Area, PathNum = p.PathNum } )
                                          .ToList();
        areas = availablePaths.Select(a => a.Area).Distinct().ToList();
    }

    public class PathData
    {
        public int Id { get; set; }
        public string Area { get; set; }
        public string PathNum { get; set; }
    }
}
